@model IEnumerable<Tiss_MindRadar.Models.RadarChartVIewModel>
@using Newtonsoft.Json
@{
    ViewBag.Title = "身心狀態檢測向度雷達圖";
    Layout = "~/Views/Shared/_MindRadarLayout.cshtml";
}
<!DOCTYPE html>
<html lang="zh-TW">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>身心狀態檢測向度雷達圖</title>
    <script src="~/RadarChartJS/chart.js"></script>
    <script src="~/RadarChartJS/chartjs-plugin-datalabels@2.2.js"></script>
    <link href="~/MindRadarCss/MentalPhysicalStateRadarChart.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
</head>
<body class="bg-gradient-to-br from-gray-50 to-gray-100">
    <div class="container mx-auto p-6 max-w-full">
        <div class="header-container bg-white rounded-lg shadow-md p-6 mb-6">
            <div class="flex items-center justify-between w-full">
                <div class="flex items-center space-x-4">
                    <div class="bg-blue-100 p-3 rounded-full">
                        <i class="fas fa-user text-blue-600 text-xl"></i>
                    </div>
                    <div class="text-base md:text-xl">
                        <h2 class="text-xl font-semibold text-gray-800">@ViewBag.UserName</h2>
                        <p class="text-gray-700">
                            <i class="fa-solid fa-cake-candles text-pink-400"></i> @ViewBag.Age 歲
                            <span class="mx-2">|</span>
                            <i class="fa-solid fa-people-group text-blue-500"></i> @ViewBag.TeamName
                        </p>
                    </div>
                </div>
                <div class="flex space-x-4 ml-auto">
                    @if (Session["UserID"] != null)
                    {
                        <a href="@Url.Action("Logout", "UserAccount")"
                           class="flex items-center px-4 py-2 bg-red-500 hover:bg-red-600 text-white rounded-lg transition duration-300">
                            <i class="fas fa-sign-out-alt mr-2"></i>登出
                        </a>
                    }
                    <a href="@Url.Action("MentalPhysicalState", "Survey")"
                       class="flex items-center px-4 py-2 bg-blue-500 hover:bg-blue-600 text-white rounded-lg transition duration-300">
                        <i class="fas fa-arrow-left mr-2"></i>返回檢測題目
                    </a>
                </div>
            </div>
        </div>


        <div class="bg-white rounded-lg shadow-md p-6">
            <h1 class="text-2xl font-bold text-center mb-6 text-gray-800 flex items-center justify-center">
                <i class="fa-solid fa-notes-medical mr-3" style="color: #aa74ec;"></i>身心狀態檢測向度雷達圖

            </h1>

            <div id="mainContent">
                <form id="radarChartForm" method="POST" action="@Url.Action("MentalPhysicalStateRadarChart", "ChartRadar")" class="mb-6">
                    @Html.AntiForgeryToken()
                    <div class="bg-gray-50 p-4 rounded-lg">
                        <label class="block text-gray-700 font-semibold mb-3 flex items-center">
                            <i class="fas fa-calendar-alt text-blue-500 mr-2"></i>選擇要比較的日期：
                        </label>
                        <div id="dateCheckboxContainer" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-3">
                            @foreach (var date in ViewBag.SurveyDates as List<DateTime>)
                            {
                                <label class="flex items-center p-3 bg-white rounded-lg border border-gray-200 hover:border-blue-300 transition duration-300 cursor-pointer">
                                    <input type="checkbox" name="surveyDates" class="form-checkbox h-5 w-5 text-blue-600"
                                           value="@date.ToString("yyyy-MM-dd")"
                                           @(ViewBag.SelectedDates != null && ViewBag.SelectedDates.Contains(date) ? "checked" : "") />
                                    <span class="ml-3 text-gray-700">
                                        <i class="far fa-calendar-check text-blue-500 mr-2"></i>@date.ToString("yyyy/MM/dd")
                                    </span>
                                </label>
                            }
                        </div>
                    </div>
                    <div class="mt-4 flex justify-center">
                        <button type="button" id="updateChartBtn"
                                class="flex items-center px-6 py-3 bg-green-500 hover:bg-green-600 text-white font-semibold rounded-lg shadow-md transition duration-300">
                            <i class="fas fa-sync-alt mr-2"></i>更新雷達圖
                        </button>
                    </div>
                </form>

                <div class="radar-chart-container mt-6 bg-gray-50 p-6 rounded-lg">
                    <canvas id="radarChart" width="580" height="580"></canvas>
                </div>

                <script id="radarData" type="application/json">
                    @Html.Raw(JsonConvert.SerializeObject(Model))
                </script>
            </div>
        </div>
    </div>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            attachEventListeners();
            initRadarChart();
        });

        function attachEventListeners() {
            document.querySelectorAll("#dateCheckboxContainer input[type='checkbox']").forEach(checkbox => {
                checkbox.addEventListener("change", enforceMaxSelection);
            });

            document.getElementById("updateChartBtn").addEventListener("click", updateRadarChart);
        }

        function enforceMaxSelection() {
            const checked = document.querySelectorAll("#dateCheckboxContainer input:checked");
            if (checked.length > 3) {
                checked[checked.length - 1].checked = false;
                Swal.fire({
                    icon: 'warning',
                    title: '最多只能選擇 3 個日期',
                    text: '請取消一個再選擇其他日期！',
                    confirmButtonText: '確定'
                });
            }
        }

        function updateRadarChart() {
            const selectedDates = [];
            document.querySelectorAll("#dateCheckboxContainer input:checked").forEach(cb => {
                selectedDates.push(cb.value);
            });

            if (selectedDates.length === 0) {
                Swal.fire({
                    icon: 'warning',
                    title: '請選擇至少一個日期',
                    text: '請勾選至少一個日期以生成雷達圖！',
                    confirmButtonText: '確定'
                });
                return;
            }

            const csrfToken = document.querySelector("input[name='__RequestVerificationToken']").value;
            const formData = new URLSearchParams();
            selectedDates.forEach(date => formData.append("surveyDates", date));
            formData.append("__RequestVerificationToken", csrfToken);

            fetch("@Url.Action("MentalPhysicalStateRadarChart", "ChartRadar")", {
                method: "POST",
                headers: { "Content-Type": "application/x-www-form-urlencoded" },
                body: formData.toString()
            })
                .then(res => res.text())
                .then(html => {
                    const tempDiv = document.createElement("div");
                    tempDiv.innerHTML = html;

                    const newChartContainer = tempDiv.querySelector(".radar-chart-container");
                    const chartContainer = document.querySelector(".radar-chart-container");
                    if (chartContainer && newChartContainer) {
                        chartContainer.innerHTML = newChartContainer.innerHTML;
                    }

                    const newRadarDataElement = tempDiv.querySelector("#radarData");
                    if (!newRadarDataElement) {
                        Swal.fire({
                            icon: 'error',
                            title: '數據錯誤',
                            text: '請重新載入頁面',
                            confirmButtonText: '確定'
                        });
                        return;
                    }

                    const newRadarData = JSON.parse(newRadarDataElement.textContent || "[]");

                    if (window.myRadarChart) {
                        window.myRadarChart.destroy();
                    }

                    if (newRadarData.length > 0) {
                        renderRadarChart("radarChart", newRadarData);
                    } else {
                        Swal.fire({
                            icon: 'warning',
                            title: '沒有檢測數據',
                            text: '當前日期沒有檢測數據，請選擇其他日期！',
                            confirmButtonText: '確定'
                        });
                    }
                })
                .catch(err => {
                    console.error("Fetch Error:", err);
                    Swal.fire({
                        icon: 'error',
                        title: '發生錯誤',
                        text: '請稍後再試！',
                        confirmButtonText: '確定'
                    });
                });
        }

        function initRadarChart() {
            const radarDataElement = document.getElementById("radarData");
            const radarData = radarDataElement ? JSON.parse(radarDataElement.textContent) : [];

            if (radarData.length > 0) {
                renderRadarChart("radarChart", radarData);
            }
        }
        function renderRadarChart(canvasId, radarData) {
            const ctx = document.getElementById(canvasId).getContext("2d");

            // 根據日期分組
            const grouped = {};
            radarData.forEach(item => {
                if (!grouped[item.SurveyDate]) {
                    grouped[item.SurveyDate] = [];
                }
                grouped[item.SurveyDate].push(item);
            });

            // 所有分類標籤（假設每筆都有相同類別順序）
            const labels = [...new Set(radarData.map(x => x.CategoryName))];

            // 顏色生成器（最多 10 色）
            const colorSet = [
                "rgba(255,99,132,0.6)", "rgba(54,162,235,0.6)", "rgba(255,206,86,0.6)",
                "rgba(75,192,192,0.6)", "rgba(153,102,255,0.6)", "rgba(255,159,64,0.6)",
                "rgba(199,199,199,0.6)", "rgba(83,102,255,0.6)", "rgba(255,102,255,0.6)",
                "rgba(102,255,102,0.6)"
            ];

            const datasets = Object.keys(grouped).map((date, index) => {
                const group = grouped[date];
                const dataValues = group.map(g => g.AverageScore);

                const max = Math.max(...dataValues);
                const min = Math.min(...dataValues);

                const maxIndices = [], minIndices = [];
                dataValues.forEach((v, i) => {
                    if (v === max) maxIndices.push(i);
                    if (v === min) minIndices.push(i);
                });

                return {
                    label: `身心狀態分數（${date}）`,
                    data: dataValues,
                    backgroundColor: colorSet[index % colorSet.length],
                    borderColor: colorSet[index % colorSet.length].replace("0.6", "1"),
                    borderWidth: 2,
                    pointBackgroundColor: dataValues.map((v, i) =>
                        maxIndices.includes(i) ? "red" :
                            minIndices.includes(i) ? "blue" : "black"),
                    pointBorderColor: "#fff",
                    pointRadius: dataValues.map((v, i) =>
                        maxIndices.includes(i) || minIndices.includes(i) ? 7 : 5),
                    pointHoverRadius: 9
                };
            });

            if (window.myRadarChart) {
                window.myRadarChart.destroy();
            }

            window.myRadarChart = new Chart(ctx, {
                type: "radar",
                data: {
                    labels: labels,
                    datasets: datasets
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            display: true,
                            position: "top",
                            labels: {
                                font: {
                                    size: 18, //這裡調整圖例字體大小
                                    weight: "bold"
                                },
                                color: "#333" //讓文字更深色清晰
                            }
                        },
                        tooltip: {
                            enabled: true,
                            callbacks: {
                                label: (tooltipItem) => `分數: ${tooltipItem.raw}`
                            }
                        },
                        datalabels: {
                            color: "black",
                            font: { weight: "bold", size: 12 },
                            anchor: "end",
                            align: "top",
                            formatter: (value) => value.toFixed(1)
                        }
                    },
                    scales: {
                        r: {
                            suggestedMin: 0,
                            suggestedMax: 5,
                            ticks: {
                                stepSize: 1,
                                backdropColor: "rgba(255,255,255,0.5)"
                            },
                            pointLabels: {
                                font: { size: 14 }
                            }
                        }
                    }
                },
                plugins: [ChartDataLabels]
            });
        }
    </script>
</body>
</html>