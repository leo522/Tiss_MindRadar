@model IEnumerable<Tiss_MindRadar.Models.RadarChartVIewModel>
@using Newtonsoft.Json
@{
    ViewBag.Title = "心理狀態檢測向度雷達圖";
    Layout = "~/Views/Shared/_MindRadarLayout.cshtml";
}
<!DOCTYPE html>
<html lang="zh-TW">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>心理狀態檢測向度雷達圖</title>
    <link href="~/MindRadarCss/MentalStateStyle.css" rel="stylesheet" />
    <script src="~/RadarChartJS/chart.js"></script>
    <script src="~/RadarChartJS/chartjs-plugin-datalabels@2.2.js"></script>
    <link href="~/MindRadarCss/MentalStateRadarChart.css" rel="stylesheet" />
    <link href="~/MindRadarCss/PsychologicalDescriptionsStyle.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
</head>
<body class="bg-gray-50">
    <div class="container mx-auto px-4 py-8 max-w-7xl">
        <!-- Header Section -->
        <div class="bg-white rounded-xl shadow-sm p-6 mb-8">
            <div class="flex justify-between items-center">
                <div class="user-info">
                    <h2 class="text-2xl font-bold text-gray-800">
                        <i class="fas fa-user-circle text-blue-500 mr-2"></i>
                        @ViewBag.UserName
                    </h2>
                    <p class="text-gray-600 mt-1">
                        <i class="fas fa-birthday-cake text-pink-500 mr-2"></i>
                        年齡: @ViewBag.Age 歲
                        <i class="fas fa-users text-green-500 ml-4 mr-2"></i>
                        隊伍: @ViewBag.TeamName
                    </p>
                </div>
                <div class="flex space-x-3">
                    @if (Session["UserID"] != null)
                    {
                        <a href="@Url.Action("Logout", "UserAccount")"
                           class="btn-danger">
                            <i class="fas fa-sign-out-alt mr-2"></i>登出
                        </a>
                    }
                    <a href="@Url.Action("MentalState", "Survey")"
                       class="btn-primary">
                        <i class="fas fa-arrow-left mr-2"></i>返回心理狀態檢測題目頁
                    </a>
                </div>
            </div>
        </div>

        <!-- Main Content -->
        <div class="grid grid-cols-1 lg:grid-cols-3 gap-8">
            <!-- Left Column - Chart and Date Selection -->
            <div class="lg:col-span-2 space-y-6">
                <div class="bg-white rounded-xl shadow-sm p-6">
                    <h2 class="text-xl font-bold text-gray-800 mb-4">
                        <i class="fas fa-chart-radar text-blue-500 mr-2"></i>
                        心理狀態檢測向度雷達圖
                    </h2>
                    
                    <form id="radarChartForm" class="mb-6">
                        @Html.AntiForgeryToken()
                        <div class="mb-4">
                            <label class="block text-gray-700 font-semibold mb-3">
                                <i class="fas fa-calendar-alt text-blue-500 mr-2"></i>
                                選擇要比較的日期：
                            </label>
                            <div id="dateCheckboxContainer" class="grid grid-cols-2 md:grid-cols-3 gap-3">
                                @foreach (var date in ViewBag.SurveyDates as List<DateTime>)
                                {
                                    <label class="date-checkbox-label">
                                        <input type="checkbox" name="surveyDates" 
                                               value="@date.ToString("yyyy-MM-dd")"
                                               @(ViewBag.SelectedDates != null && ViewBag.SelectedDates.Contains(date) ? "checked" : "") />
                                        <span class="date-text">
                                            <i class="far fa-calendar-check mr-2"></i>
                                            @date.ToString("yyyy/MM/dd")
                                        </span>
                                    </label>
                                }
                            </div>
                        </div>
                        <button type="button" id="updateChartBtn" class="btn-success">
                            <i class="fas fa-sync-alt mr-2"></i>更新雷達圖
                        </button>
                    </form>

                    <div class="radar-chart-container">
                        <canvas id="radarChart" width="400" height="400"></canvas>
                    </div>
                </div>
            </div>

            <!-- Right Column - Comments Section -->
            <div class="lg:col-span-1">
                <div class="bg-white rounded-xl shadow-sm p-6">
                    <h2 class="text-xl font-bold text-gray-800 mb-4">
                        <i class="fas fa-comments text-blue-500 mr-2"></i>
                        留言與回覆區
                    </h2>
                    <p class="text-sm text-gray-500 mb-4">
                        <i class="fas fa-info-circle mr-2"></i>
                        僅顯示當前勾選日期
                    </p>

                    <div id="commentSection" class="space-y-4 mb-6"></div>

                    @if (Session["UserID"] != null && (Session["UserRole"]?.ToString() == "Player" || Session["UserRole"].ToString() == "Coach" || Session["UserRole"].ToString() == "Referee"))
                    {
                        <div class="mt-4">
                            <label for="commentText" class="block font-semibold text-gray-700 mb-2">
                                <i class="fas fa-pen-alt text-blue-500 mr-2"></i>
                                我要留言
                            </label>
                            <textarea id="commentText" 
                                    class="w-full border border-gray-300 rounded-lg p-3 focus:ring-2 focus:ring-blue-500 focus:border-blue-500" 
                                    rows="3" 
                                    placeholder="請輸入留言內容..."></textarea>
                            <button id="submitCommentBtn" class="btn-primary mt-3">
                                <i class="fas fa-paper-plane mr-2"></i>送出留言
                            </button>
                        </div>
                    }
                </div>
            </div>
        </div>

        <!-- Psychological Descriptions Section -->
        <div class="mt-8">
            <div class="bg-white rounded-xl shadow-sm p-6">
                <h2 class="text-xl font-bold text-gray-800 mb-4">
                    <i class="fas fa-book text-blue-500 mr-2"></i>
                    運動心理技能說明
                </h2>
                <div class="overflow-x-auto">
                    <table class="min-w-full bg-white rounded-lg overflow-hidden">
                        <tbody>
                            @if (ViewBag.PsychologicalHeaders != null && ViewBag.PsychologicalDescriptions != null && ViewBag.MentalStateQuestions != null)
                            {
                                var descriptions = ViewBag.PsychologicalDescriptions as List<Tiss_MindRadar.Models.PsychologicalStateDescription>;
                                var questions = ViewBag.MentalStateQuestions as List<Tiss_MindRadar.Models.MentalState>;

                                string currentCategory = null;
                                var categoryRowSpans = descriptions.GroupBy(d => d.CategoryName)
                                    .ToDictionary(g => g.Key, g => g.Count());
                                var categoryItemIndex = new Dictionary<string, int>();

                                foreach (var header in ViewBag.PsychologicalHeaders)
                                {
                                    var firstCategory = descriptions.FirstOrDefault(d => d.HeaderID == header.ID)?.CategoryName ?? "";
                                    string headerClass = firstCategory.Contains("基礎") ? "bg-yellow-100" :
                                                         firstCategory.Contains("身體") ? "bg-orange-100" :
                                                         firstCategory.Contains("認知") ? "bg-blue-100" : "bg-gray-100";

                                    <tr class="@headerClass">
                                        <td colspan="4" class="py-4 px-6 font-bold text-lg">
                                            <i class="fas fa-tag mr-2"></i>@header.HeaderText
                                        </td>
                                    </tr>

                                    var filteredDescriptions = descriptions.Where(d => d.HeaderID == header.ID).ToList();
                                    foreach (var item in filteredDescriptions)
                                    {
                                        string categoryClass = item.CategoryName.Contains("基礎") ? "bg-yellow-50" :
                                                               item.CategoryName.Contains("身體") ? "bg-orange-50" :
                                                               item.CategoryName.Contains("認知") ? "bg-blue-50" : "";

                                        if (!categoryItemIndex.ContainsKey(item.CategoryName))
                                        {
                                            categoryItemIndex[item.CategoryName] = 1;
                                        }
                                        else
                                        {
                                            categoryItemIndex[item.CategoryName]++;
                                        }

                                        <tr class="border-b border-gray-200 hover:bg-gray-50">
                                            @if (currentCategory != item.CategoryName)
                                            {
                                                int rowspan = categoryRowSpans[item.CategoryName];
                                                <td class="py-3 px-6 text-left font-bold @categoryClass" rowspan="@rowspan">
                                                    <i class="fas fa-folder-open mr-2"></i>@item.CategoryName
                                                </td>
                                                currentCategory = item.CategoryName;
                                            }
                                            <td class="py-3 px-6">
                                                @categoryItemIndex[item.CategoryName]. @item.SubCategory
                                            </td>
                                            <td class="py-3 px-6">@item.DescriptionContent</td>
                                            <td class="py-3 px-6">
                                                <ul class="list-none space-y-1">
                                                    @foreach (var q in questions.Where(q => q.CategoryID == item.ID).OrderBy(q => q.QuestionNumber))
                                                    {
                                                        <li class="flex items-start">
                                                            <span>@q.QuestionNumber. @q.QuestionText</span>
                                                        </li>
                                                    }
                                                </ul>
                                            </td>
                                        </tr>
                                    }
                                }
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>

    <script id="radarData" type="application/json">
        @Html.Raw(JsonConvert.SerializeObject(Model))
    </script>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            attachEventListeners();
            const data = JSON.parse(document.getElementById("radarData").textContent || "[]");
            if (data.length > 0) {
                renderRadarChart("radarChart", data);
            }
        });

        function attachEventListeners() {
            document.querySelectorAll("#dateCheckboxContainer input").forEach(cb => {
                cb.addEventListener("change", enforceMaxSelection);
            });
            document.getElementById("updateChartBtn").addEventListener("click", updateRadarChart);
        }

        function enforceMaxSelection() {
            const checked = document.querySelectorAll("#dateCheckboxContainer input:checked");
            if (checked.length > 3) {
                checked[checked.length - 1].checked = false;
                Swal.fire({ icon: "warning", title: "最多只能選擇 3 個日期", confirmButtonText: "確定" });
            }
        }

        function updateRadarChart() {
            const selectedDates = [];
            document.querySelectorAll("#dateCheckboxContainer input:checked").forEach(cb => selectedDates.push(cb.value));
            if (selectedDates.length === 0) {
                Swal.fire({ icon: "warning", title: "請選擇至少一個日期", confirmButtonText: "確定" });
                return;
            }

            const token = document.querySelector("input[name='__RequestVerificationToken']").value;
            const formData = new URLSearchParams();
            selectedDates.forEach(d => formData.append("surveyDates", d));
            formData.append("__RequestVerificationToken", token);

            fetch("@Url.Action("MentalStateRadarChart", "ChartRadar")", {
                method: "POST",
                headers: { "Content-Type": "application/x-www-form-urlencoded" },
                body: formData.toString()
            })
            .then(res => res.text())
            .then(html => {
                const tempDiv = document.createElement("div");
                tempDiv.innerHTML = html;
                const newData = tempDiv.querySelector("#radarData");
                if (!newData) {
                    Swal.fire({ icon: "error", title: "資料錯誤", confirmButtonText: "確定" });
                    return;
                }

                const parsedData = JSON.parse(newData.textContent || "[]");
                if (window.myRadarChart) window.myRadarChart.destroy();
                renderRadarChart("radarChart", parsedData);
            });
        }

        function renderRadarChart(canvasId, radarData) {
            const ctx = document.getElementById(canvasId).getContext("2d");
            const grouped = {};
            radarData.forEach(item => {
                if (!grouped[item.SurveyDate]) grouped[item.SurveyDate] = [];
                grouped[item.SurveyDate].push(item);
            });

            const labels = [...new Set(radarData.map(d => `${d.Dimension} - ${d.CategoryName}`))];
            const colorSet = ["rgba(255,99,132,0.6)", "rgba(54,162,235,0.6)", "rgba(75,192,192,0.6)"];

            const datasets = Object.keys(grouped).map((date, i) => {
                const data = grouped[date];
                const scores = data.map(d => d.AverageScore);
                const max = Math.max(...scores), min = Math.min(...scores);
                const maxIndices = [], minIndices = [];
                scores.forEach((v, i) => {
                    if (v === max) maxIndices.push(i);
                    if (v === min) minIndices.push(i);
                });

                return {
                    label: `心理狀態分數（${date}）`,
                    data: scores,
                    backgroundColor: colorSet[i % colorSet.length],
                    borderColor: colorSet[i % colorSet.length].replace("0.6", "1"),
                    borderWidth: 2,
                    pointBackgroundColor: scores.map((v, i) =>
                        maxIndices.includes(i) ? "red" : minIndices.includes(i) ? "blue" : "black"),
                    pointBorderColor: "#fff",
                    pointRadius: scores.map((v, i) =>
                        maxIndices.includes(i) || minIndices.includes(i) ? 7 : 5),
                    pointHoverRadius: 9
                };
            });

            window.myRadarChart = new Chart(ctx, {
                type: "radar",
                data: { labels: labels, datasets: datasets },
                options: {
                    responsive: true,
                    plugins: {
                        legend: {
                            display: true,
                            position: "top",
                            labels: {
                                font: {
                                    size: 18, //這裡調整圖例字體大小
                                    weight: "bold"
                                },
                                color: "#333" //讓文字更深色清晰
                            }
                        },
                        tooltip: { callbacks: { label: ctx => `分數: ${ctx.raw}` } },
                        datalabels: {
                            color: "#000", font: { size: 12, weight: "bold" },
                            formatter: v => v.toFixed(1)
                        }
                    },
                    scales: {
                        r: {
                            suggestedMin: 0, suggestedMax: 5, ticks: { stepSize: 1 },
                            pointLabels: { font: { size: 14 } }
                        }
                    }
                },
                plugins: [ChartDataLabels]
            });
        }

        function loadComments() {
            const selectedDates = [...document.querySelectorAll("#dateCheckboxContainer input:checked")].map(cb => cb.value);
            if (selectedDates.length === 0) return;

            fetch("/RadarComment/GetComments", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({
                    radarType: "心理狀態",
                    surveyDates: selectedDates
                })
            })
                .then(res => res.json())
                .then(data => {
                    const container = document.getElementById("commentSection");
                    container.innerHTML = "";

                    if (data.length === 0) {
                        container.innerHTML = `<p class="text-gray-500">尚無留言</p>`;
                        return;
                    }

                    data.forEach(c => {
                        const repliesHtml = c.Replies.map(r =>
                            `<div class='ml-6 mt-1 border-l-4 pl-2 border-blue-300 text-sm text-gray-800'>🧠 心理人員回覆：${r.ReplyText}</div>`
                        ).join("");

                        container.innerHTML += `
                <div class='border p-3 bg-white rounded shadow-sm'>
                    <div class='text-sm text-gray-700 mb-1'>🧑‍💼 <strong>${c.UserName}</strong>（${c.Role}）於 <strong>${c.SurveyDate}</strong> 留言：</div>
                    <div class='text-gray-900'>${c.CommentText}</div>
                    ${repliesHtml}
                </div>`;
                    });
                });
        }

        function submitComment() {
            const selectedDates = [...document.querySelectorAll("#dateCheckboxContainer input:checked")].map(cb => cb.value);
            const commentText = document.getElementById("commentText").value.trim();
            if (selectedDates.length === 0) {
                Swal.fire("請先選擇留言的日期");
                return;
            }
            if (!commentText) {
                Swal.fire("請輸入留言內容");
                return;
            }

            fetch("/RadarComment/SubmitComment", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({
                    radarType: "心理狀態",
                    surveyDates: selectedDates,
                    commentText: commentText
                })
            })
                .then(res => res.json())
                .then(result => {
                    if (result.success) {
                        Swal.fire("留言成功");
                        document.getElementById("commentText").value = "";
                        loadComments();
                    } else {
                        Swal.fire("留言失敗", result.message);
                    }
                });
        }

        // 初始化載入留言、綁定按鈕
        window.addEventListener("load", loadComments);
        document.getElementById("updateChartBtn").addEventListener("click", () => {
            setTimeout(() => loadComments(), 500);
        });
        document.getElementById("submitCommentBtn")?.addEventListener("click", submitComment);
    </script>
</body>
</html>