@model IEnumerable<Tiss_MindRadar.Models.RadarChartVIewModel>
@using Newtonsoft.Json
@{
    ViewBag.Title = "心理狀態檢測向度雷達圖";
    Layout = "~/Views/Shared/_MindRadarLayout.cshtml";
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>心理狀態檢測向度雷達圖</title>
    <script src="~/RadarChartJS/chart.js"></script>
    <script src="~/RadarChartJS/chartjs-plugin-datalabels@2.2.js"></script> @*雷達圖插件*@
    <link href="~/MindRadarCss/MentalStateRadarChart.css" rel="stylesheet" />
    <link href="~/MindRadarCss/PsychologicalDescriptionsStyle.css" rel="stylesheet" />
    <script src="~/RadarChartJS/MentalStateRadarChart.js"></script>
</head>
<body class="bg-gray-100">
    <div class="container mx-auto p-6">
        <div class="header-container">
            <div class="user-info">
                受訪者: @ViewBag.UserName <span class="text-lg text-gray-600">(年齡: @ViewBag.Age 歲 | 隊伍: @ViewBag.TeamName)</span>
            </div>
            <div class="flex justify-end space-x-4 mb-4">
                @if (Session["UserID"] != null)
                {
                    <a href="@Url.Action("Logout", "UserAccount")"
                       class="bg-red-500 hover:bg-red-600 text-white font-bold py-2 px-4 rounded-lg shadow-md">
                        登出
                    </a>
                }
                <a href="@Url.Action("MentalState", "Survey")"
                   class="bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 px-6 rounded-lg shadow-md">
                    返回心理狀態檢測題目頁
                </a>
            </div>
        </div>
        <h1 class="text-2xl font-bold text-center mb-6 text-gray-800">心理狀態檢測向度雷達圖</h1>
        <div class="button-container">
            @if (Session["UserRole"] != null && Session["UserRole"].ToString() == "Consultant")
            {
                <div class="button-container">
                    <button id="viewRawDataBtn" class="bg-red-500 hover:bg-red-600 text-white font-bold py-2 px-6 rounded-lg shadow-md">
                        查看隊伍分數 RawData
                    </button>
                </div>
            }
        </div>
        <div id="mainContent">
            <form id="radarChartForm" method="POST" action="@Url.Action("MentalStateRadarChart", "ChartRadar")">
                @Html.AntiForgeryToken()
                <label class="block text-gray-700 font-bold mb-2">選擇要比較的日期：</label>
                <div id="dateCheckboxContainer" class="flex flex-wrap gap-2 mb-4">
                    @foreach (var date in ViewBag.SurveyDates as List<DateTime>)
                    {
                        <label class="inline-flex items-center">
                            <input type="checkbox" name="surveyDates" class="form-checkbox h-5 w-5 text-blue-600" value="@date.ToString("yyyy-MM-dd")"
                                   @(ViewBag.SelectedDates != null && ViewBag.SelectedDates.Contains(date) ? "checked" : "")>
                            <span class="ml-2">@date.ToString("yyyy/MM/dd")</span>
                        </label>
                    }
                </div>
                <button type="button" id="updateChartBtn" class="bg-green-500 hover:bg-green-600 text-white font-bold py-2 px-4 rounded">
                    更新雷達圖
                </button>

            </form>

            <div class="radar-chart-container mt-4">
                <canvas id="radarChart" width="580" height="580"></canvas>
            </div>

            <script id="radarData" type="application/json">
                @Html.Raw(JsonConvert.SerializeObject(Model))
            </script>
        </div>

        <div class="mt-6">
            <h2 class="text-xl font-bold text-gray-800 mb-4">運動心理技能說明</h2>
            <table class="min-w-full bg-white shadow-md rounded border border-gray-300">
                <thead>
                    <tr class="bg-gray-200 text-gray-600 uppercase text-lg leading-normal">
                        <th class="py-3 px-6 text-left w-1/4">類別</th>
                        <th class="py-3 px-6 text-left w-1/4">心理技能</th>
                        <th class="py-3 px-6 text-left">描述</th>
                    </tr>
                </thead>
                <tbody>
                    @if (ViewBag.PsychologicalDescriptions != null)
                    {
                        var descriptions = ViewBag.PsychologicalDescriptions as List<Tiss_MindRadar.Models.PsychologicalStateDescription>;
                        if (descriptions != null)
                        {
                            string currentCategory = null;

                            // 預先計算 category 的 rowspan
                            Dictionary<string, int> categoryRowSpans = descriptions
                                .GroupBy(d => d.CategoryName)
                                .ToDictionary(g => g.Key, g => g.Count());

                            // 追蹤每個類別的編號
                            Dictionary<string, int> categoryItemIndex = new Dictionary<string, int>();

                            foreach (var item in descriptions)
                            {
                                // 設定背景顏色類別
                                string categoryClass = item.CategoryName.Contains("基礎心理技能") ? "bg-yellow-200" :
                                                       item.CategoryName.Contains("身體心理技能") ? "bg-orange-300" :
                                                       item.CategoryName.Contains("認知技能") ? "bg-blue-300" : "";

                                // 確保該類別的計數存在
                                if (!categoryItemIndex.ContainsKey(item.CategoryName))
                                {
                                    categoryItemIndex[item.CategoryName] = 1;
                                }
                                else
                                {
                                    categoryItemIndex[item.CategoryName]++;
                                }

                                <tr class="border-b border-gray-200">
                                    @if (currentCategory != item.CategoryName)
                                    {
                                        int categoryRowSpan = categoryRowSpans[item.CategoryName];
                                        <td class="py-3 px-6 text-left font-bold @categoryClass" rowspan="@categoryRowSpan">
                                            @item.CategoryName
                                        </td>
                                        currentCategory = item.CategoryName;
                                    }
                                    <td class="py-3 px-6 text-left">@categoryItemIndex[item.CategoryName]. @item.SubCategory</td>
                                    <td class="py-3 px-6 text-left">@item.DescriptionContent</td>
                                </tr>
                            }
                        }
                    }
                </tbody>
            </table>
        </div>

    </div>

    <script>
        const radarData = @Html.Raw(JsonConvert.SerializeObject(Model));

       document.addEventListener("DOMContentLoaded", function () {
            attachEventListeners();
            initRadarChart();
        });

        function attachEventListeners() {
            document.querySelectorAll("#dateCheckboxContainer input[type='checkbox']").forEach(checkbox => {
                checkbox.addEventListener("change", function () {
                    enforceMaxSelection();
                });
            });

            document.getElementById("updateChartBtn").addEventListener("click", function () {
                updateRadarChart();
            });
        }

        function enforceMaxSelection() {
            const checkboxes = document.querySelectorAll("#dateCheckboxContainer input[type='checkbox']");
            const checked = document.querySelectorAll("#dateCheckboxContainer input:checked");

            if (checked.length > 3) {
                checked[checked.length - 1].checked = false;
                Swal.fire({
                    icon: 'warning',
                    title: '最多只能選擇 3 個日期',
                    text: '請取消一個再選擇其他日期！',
                    confirmButtonText: '確定'
                });
            }
        }

       function updateRadarChart() {
    const selectedDates = [];
    document.querySelectorAll("#dateCheckboxContainer input:checked").forEach(checkbox => {
        selectedDates.push(checkbox.value);
    });

    if (selectedDates.length === 0) {
        Swal.fire({
            icon: 'warning',
            title: '請選擇至少一個日期',
            text: '請勾選至少一個日期以生成雷達圖！',
            confirmButtonText: '確定'
        });
        return;
    }

    // **獲取 CSRF Token**
    const csrfTokenElement = document.querySelector("input[name='__RequestVerificationToken']");
    if (!csrfTokenElement) {
        console.error("CSRF Token 不存在");
        return;
    }
    const csrfToken = csrfTokenElement.value;

    // **轉換為 `application/x-www-form-urlencoded` 格式**
    const formData = new URLSearchParams();
    selectedDates.forEach(date => formData.append("surveyDates", date));
    formData.append("__RequestVerificationToken", csrfToken);

    fetch("@Url.Action("MentalStateRadarChart", "ChartRadar")", {
        method: "POST",
        headers: {
            "Content-Type": "application/x-www-form-urlencoded"
        },
        body: formData.toString()
    })
    .then(response => response.text())
    .then(html => {
        const tempDiv = document.createElement("div");
        tempDiv.innerHTML = html;

        // **確保 `mainContent` 存在**
        const mainContent = document.getElementById("mainContent");
        if (!mainContent) {
            console.error("Error: 頁面不存在，無法更新內容");
            return;
        }

        // **更新雷達圖區塊**
        const newChartContainer = tempDiv.querySelector(".radar-chart-container");
        const chartContainer = document.querySelector(".radar-chart-container");

        if (chartContainer && newChartContainer) {
            chartContainer.innerHTML = newChartContainer.innerHTML;
        }

        // **解析新的 `radarData`，避免 `null` 或 `undefined` 錯誤**
        const newRadarDataElement = tempDiv.querySelector("#radarData");
        if (!newRadarDataElement) {
            console.error("Error: 日期不存在，無法更新");
            Swal.fire({
                icon: 'error',
                title: '數據錯誤',
                text: '請重新載入頁面',
                confirmButtonText: '確定'
            });
            return;
        }

        const newRadarData = JSON.parse(newRadarDataElement.textContent || "[]");

        console.log("新的 Radar Data:", newRadarData);

        // **刪除舊的 Chart，避免重複繪製**
        if (window.myRadarChart) {
            window.myRadarChart.destroy();
        }

        if (newRadarData.length > 0) {
            renderRadarChart("radarChart", newRadarData);
        } else {
            Swal.fire({
                icon: 'warning',
                title: '沒有檢測數據',
                text: '當前日期沒有檢測數據，請選擇其他日期！',
                confirmButtonText: '確定'
            });
        }
    })
    .catch(error => {
        console.error("Fetch Error:", error);
        Swal.fire({
            icon: 'error',
            title: '發生錯誤',
            text: '請稍後再試！',
            confirmButtonText: '確定'
        });
    });
}

        function initRadarChart() {
            const radarDataElement = document.getElementById("radarData");
            const radarData = radarDataElement ? JSON.parse(radarDataElement.textContent) : [];

            if (radarData.length > 0) {
                renderRadarChart("radarChart", radarData);
            }
        }
        document.getElementById("viewRawDataBtn").addEventListener("click", function () {
        window.location.href = "@Url.Action("GetMentalStateTeamRawData", "TeamRawData")";
    });
    </script>
</body>
</html>